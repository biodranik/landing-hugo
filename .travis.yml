# Our "build" script also automatically deploys static html sites.
# - Build & deploy do not work for forked pull requests (can't deploy without secure $GITHUB_TOKEN).
# - Build results from pull requests are deployed to dev Github pages.
# - Build results from the master branch are deployed directly into production Github pages.
if: fork = false
language: minimal
git:
  depth: 1
  submodules_depth: 1
install:
  # travis dpl gem is manually called to deploy from collaborators pull requests.
  - gem install dpl --no-rdoc --no-ri
script:
  - |
    if [ "$TRAVIS_BRANCH" = "master" ] && [ "$TRAVIS_EVENT_TYPE" = "push" ]; then
      HUGO_ENV=production tools/build.sh      # production
    else
      tools/build_dev.sh  # dev
    fi
after_success:
  - |
    if [ ! -z "$TRAVIS_PULL_REQUEST_BRANCH" ]; then
      params=( # Dev deployment repos for each language.
        '--local-dir=public/en --project-name=preview.com --repo=VibroBox/preview.com'
        '--local-dir=public/ru --project-name=preview.ru --repo=VibroBox/preview.ru'
      )
    elif [ "$TRAVIS_BRANCH" = "master" ]; then
      params=( # Production deployment repos are pushed from master branch only.
        '--local-dir=public/en --project-name=vibrobox.com --repo=VibroBox/www.vibrobox.com'
        '--local-dir=public/ru --project-name=vibrobox.ru --repo=VibroBox/www.vibrobox.ru'
      )
    else
      params=() # Do nothing for non-master branch pushes.
    fi
    for param in "${params[@]}"; do
      dpl --provider=pages --github-token=$GITHUB_TOKEN --skip-cleanup=true \
          --keep-history=true --target-branch=master --committer-from-gh=true \
          $param
    done
    # Clear CDN cache after production deployments.
    if [ "$TRAVIS_BRANCH" = "master" ]; then
      zones=( $VIBROBOX_RU_ZONE $VIBROBOX_COM_ZONE )
      for zone in "${zones[@]}"; do
        curl -X DELETE "https://api.cloudflare.com/client/v4/zones/$zone/purge_cache" \
        -H "X-Auth-Email: $X_AUTH_EMAIL" \
        -H "X-Auth-Key: $X_AUTH_KEY" \
        -H "Content-Type: application/json" \
        --data '{"purge_everything":true}'
      done
    fi
# Deployment sections below push from master branch to production Github Pages.
# deploy:
#   - provider: pages
#     # TODO Change to production
#     repo: VibroBox/preview.com
#     target-branch: master
#     local-dir: public/en
#     project-name: https://vibrobox.github.io/preview.com/
#     skip-cleanup: true
#     github-token: $GITHUB_TOKEN  # Set in travis-ci.org dashboard, marked secure.
#     keep-history: true
#     on:
#       branch: master
#     committer-from-gh: true
#   - provider: pages
#     # TODO Change to production
#     repo: VibroBox/preview.ru
#     target-branch: master
#     local-dir: public/ru
#     project-name: https://vibrobox.github.io/preview.ru/
#     skip-cleanup: true
#     github-token: $GITHUB_TOKEN  # Set in travis-ci.org dashboard, marked secure.
#     keep-history: true
#     on:
#       branch: master
#     committer-from-gh: true
